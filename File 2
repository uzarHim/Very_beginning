import pandas as pd
import pyodbc

def run_exclusion_check(conn, feed, book, report_date, is_feed_exact, is_book_exact):
    """
    Fetches exclusion data from a database and filters it based on user input
    for feed and book, with options for exact matching.
    """
    output_messages = []
    
    # Clean up inputs
    feed = str(feed).strip() if feed else ""
    book = str(book).strip() if book else ""
    
    # Format the date for the SQL query (assuming YYYYMMDD format in DB)
    date_yyyymmdd = report_date.replace('-', '')

    # --- IMPORTANT: Update this query with your actual table and column names ---
    # This query should get all the data for the given day.
    # The filtering for feed/book will be done in Python (pandas) afterwards.
    sql_query = f"""
        SELECT FeedName, BookName, InstrumentID, ExclusionReason, Timestamp
        FROM YourExclusionTableName
        WHERE ValuationDate = '{date_yyyymmdd}'
    """
    
    output_messages.append(f"Fetching exclusion data for date: {report_date}...")

    try:
        if conn is None:
            raise Exception("Database connection is not available.")
        
        df = pd.read_sql(sql_query, conn)
        
        if df.empty:
            output_messages.append("\nINFO: No exclusion data found for the selected date.")
            return "\n".join(output_messages)

    except Exception as e:
        output_messages.append(f"\nDATABASE ERROR: {e}")
        return "\n".join(output_messages)

    # --- DYNAMIC FILTERING LOGIC ---
    
    conditions = []
    
    # Build the condition for the Feed search
    if feed:
        # IMPORTANT: Change 'FeedName' to your actual column name
        if is_feed_exact:
            conditions.append(df['FeedName'] == feed)
            output_messages.append(f"Searching for EXACT Feed: '{feed}'")
        else:
            conditions.append(df['FeedName'].str.contains(feed, case=False, na=False))
            output_messages.append(f"Searching for PARTIAL Feed: '{feed}'")

    # Build the condition for the Book search
    if book:
        # IMPORTANT: Change 'BookName' to your actual column name
        if is_book_exact:
            conditions.append(df['BookName'] == book)
            output_messages.append(f"Searching for EXACT Book: '{book}'")
        else:
            conditions.append(df['BookName'].str.contains(book, case=False, na=False))
            output_messages.append(f"Searching for PARTIAL Book: '{book}'")
    
    if not conditions:
        output_messages.append("\nPlease provide a Feed, a Book, or both to search.")
        return "\n".join(output_messages)

    # Combine all conditions with a logical AND
    final_condition = conditions[0]
    for cond in conditions[1:]:
        final_condition = final_condition & cond
        
    result_df = df[final_condition]

    # --- Display results ---
    if not result_df.empty:
        output_messages.append("\n--- Found Results ---")
        output_messages.append(result_df.to_string(index=False))
    else:
        output_messages.append("\n--- No Match Found ---")

    return "\n".join(output_messages)
